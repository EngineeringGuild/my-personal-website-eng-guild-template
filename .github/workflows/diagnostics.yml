# /.github/workflows/diagnostics.yml
# Purpose: Provides on-demand network diagnostic tools for debugging.
name: üîç Network Diagnostics

on:
  workflow_dispatch:

jobs:
  run-diagnostics:
    name: üî¨ Run Network Diagnostics
    runs-on: ubuntu-latest
    steps:
      - name: üîå Advanced Port Connectivity Matrix
        run: |
          echo "üîå ADVANCED PORT CONNECTIVITY MATRIX"
          echo "===================================="
          SERVERS=(
            "files.hostinger.com"
            "ftp.hostinger.com"
            "185.239.210.65"
            "153.92.2.12"
          )
          PORTS=(21 22 80 443 990)
          
          for server in "${SERVERS[@]}"; do
            echo "üéØ Testing server: $server"
            for port in "${PORTS[@]}"; do
              if timeout 5 bash -c "echo >/dev/tcp/$server/$port" 2>/dev/null; then
                echo "  ‚úÖ Port $port is OPEN"
              else
                echo "  ‚ùå Port $port is CLOSED/TIMEOUT"
              fi
            done
            echo ""
          done

      - name: üîí FTPS Connectivity Deep Test
        run: |
          echo "üîí FTPS CONNECTIVITY DEEP ANALYSIS"
          echo "================================="
          FTPS_SERVER="files.hostinger.com"
          if timeout 20 openssl s_client -connect $FTPS_SERVER:990 -servername $FTPS_SERVER < /dev/null 2>/dev/null | grep -q "CONNECTED"; then
            echo "‚úÖ FTPS SSL handshake successful on $FTPS_SERVER"
          else
            echo "‚ùå FTPS SSL handshake failed on $FTPS_SERVER"
          fi 